---
on:
  pull_request:
  issue_comment:
    types: [created, edited, deleted]
    

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

name: Release Management

jobs:
  ActorCheck:
    runs-on: ubuntu-22.04
    
    outputs:
      IsActionBot: ${{ steps.ActorCheck.outputs.IsActionBot }}
      IsCommentEvent: ${{ steps.ActorCheck.outputs.IsCommentEvent }}
      IsBuildCommentEvent: ${{ steps.ActorCheck.outputs.IsBuildCommentEvent }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ActorCheck
        id: ActorCheck
        env:
          ACTOR: ${{ github.event.pull_request.user.login }}
          EVENT: ${{ github.event_name }}
          ISSUE_BODY: ${{ github.event.comment.body }}
        run: |
          # Check if the actor is github-actions[bot]
          # intial PRs created by the bot are ignored anyway
          # but we don't want it recursing into itself
          if [ "$ACTOR" = "github-actions[bot]" ]; then
            echo "IsActionBot=true" >> $GITHUB_OUTPUT
            echo "IsCommentEvent=false" >> $GITHUB_OUTPUT
            echo "IsBuildCommentEvent=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "IsActionBot=false" >> $GITHUB_OUTPUT

          # Check if the event is issue_comment 
          if [ "$EVENT" != "issue_comment" ]; then
            echo "IsCommentEvent=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "IsCommentEvent=true" >> $GITHUB_OUTPUT

          # check if the issue body only contains the build command
          if [ "$ISSUE_BODY" != "/build" ]; then
            echo "IsBuildCommentEvent=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "IsBuildCommentEvent=true" >> $GITHUB_OUTPUT
          

  PrBuild:

    needs: 
      - ActorCheck

    # only run if :
    #  - a user commented /build
    #  - a user made the pr
    if: ${{ needs.ActorCheck.outputs.IsBuildCommentEvent == 'true' || (needs.ActorCheck.outputs.IsCommentEvent == 'false' && needs.ActorCheck.outputs.IsActionBot == 'false')  }}

    runs-on: ubuntu-22.04

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: OS Deps
        uses: ./.github/actions/setup-os

      - name: Tooling
        uses: ./.github/actions/setup-tooling
        with:
          SetupCommand: ./setup.sh

      - name: Build
        run: |
          ./build.sh Debug

      - uses: actions/upload-artifact@v4
        id: artifact-upload
        with:
          name: lampray-pr-preview-binary
          path: ./build/Lamp
          
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Build output

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            A new [build is available][1] for testing :tada:

              [1]: ${{ steps.artifact-upload.outputs.artifact-url}}

  PrFlatPak:
    needs:
      - PrBuild
    runs-on: ubuntu-22.04

    container:
      # gnome-45
      # https://hub.docker.com/layers/bilelmoussaoui/flatpak-github-actions/gnome-45/images/sha256-16e884b42f6cfdbed3c2baaa3f2da621c7f4db25e53036b3b814ad0b67fcf5e2?context=explore
      image: bilelmoussaoui/flatpak-github-actions@sha256:16e884b42f6cfdbed3c2baaa3f2da621c7f4db25e53036b3b814ad0b67fcf5e2
      options: --privileged

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: lampray-pr-preview-binary

      - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          bundle: lampray.flatpak
          manifest-path: org.github.chollingworth.Lampray.yml
          cache-key: flatpak-builder-${{ github.sha }}

      - uses: actions/upload-artifact@v4
        id: artifact-upload
        with:
          name: lampray-pr-preview-binary
          path: ./build/Lamp